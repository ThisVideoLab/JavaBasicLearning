package sec04_anonymousclass.EX03_AnonymousClass_3;

interface A{
	public abstract void abc();
}

// 자식 클래스 직접 생성

class B implements A {
	public void abc() {
		System.out.println("입력매개변수 전달");
	}
}
class C {
	void cde(A a) {
		a.abc();
	}
}

public class AnonymousClass_3 {

	public static void main(String[]args) {
		
		/* 익명 이너 클래스를 활용한 인터페이스 타입의 입력매개변수 전달
		   
		   이번에는 인터페이스 타입의 입력매개변수로 익명 이너 클래스를 이용해 생성한 객체를 전달하는 방법을
		   알아보자. 인터페이스 A에는 추상 메서드 abc(), 클래스 C에는 인터페이스 A타입의 객체를 입력
		   매개변수로 포함하고 있는 메서드 cde(A a)가 있음. 
		   
		   이때 클래스 C의 객체를 생성한 후 cde(A a) 메서드를 호출하기 위해서는 입력매개변수로 사용될
		   인터페이스 A 타입의 객체를 생성해야 함. 인터페이스로는 객체를 직접 생성할 수 없으므로 인터페이스 A를
		   구현한 자식 클래스의 객체가 전달되어야 함. 결국 인터페이스 A의 객체 생성 문제와 동일해지는 것.
		   
		   인터페이스 A의 객체를 생성하고, 메서드의 입력매개변수로 전달하는 방법은 문법적으로 크게 4가지 형태로
		   분류할 수 있음. 먼저 다음과 같이 인터페이스 A의 자식 클래스 B를 직접 정의할 때를 살펴보면,
		   자식 클래스를 직접 정의했으므로 자식 클래스의 생성자를 호출함으로써 객체는 얼마든지 생성 가능함.
		   이때 생성한 객체를 메서드 입력매개변수로 전달하는 방식에 따라 다시 방법이 2개로 나뉨.
		   		   
		 */
		C c = new C();
		
		// 방법1. 클래스명 O + 참조 변수명 O
		
		A a = new B();
		c.cde(a);
		
		/* 먼저 방법1은 B() 생성자를 이용해 생성한 객체를 A 타입의 참조 변수에 저장하고, 입력매개변수로
		   참조 변수를 넘겨주는 방식. 이때 객체 참조 변수(a1)의 역할은 객체의 참좃값을 전달하기 위해서만
		   사용됨. 
		  
		 */
		
		// 방법2. 클래스명 O + 참조 변수명 X
		
		c.cde(new B());
		
		/* 방법2는단순히 객체의 참좃값만을 전달할 목적이라면 굳이 참조 변수를 사용하지 않고 메서드 입력매개변수
		   위치에서 바로 new B()와 같이 객체를 생성하면 생성된 객체의 참좃값이 메서드로 전달되는 것.
		   
		 */
	}
	
}
