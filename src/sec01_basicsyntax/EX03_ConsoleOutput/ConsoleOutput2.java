package sec01_basicsyntax.EX03_ConsoleOutput;

public class ConsoleOutput2 {

	public static void main(String[]args) {
	
		/* 변수 넣어서 출력하기
		 소괄호 안에 값을 직접 입력하는 방법 외에, 변수라는 저장 공간에 값을 담은 후 변수를 넘겨 주어도 동일한
		 결과를 얻을 수 있음. 이러한 변수를 설정하면 코드가 방대해져도 작은 노력으로 많은 부분의 변경이 가능해짐.
		*/
		int a = 3;
		String b = "화면";
		System.out.println(a); // 3 출력
		System.out.println(b); // 화면 출력
		System.out.println(a+b); // 3화면 출력
		System.out.println(a+b+"출력"); // 3화면출력 출력
		
		/* 형식대로 출력하기
		이 메서드는 C언어의 printf()와 동일한 동작을 실행함. 말 그대로 출력 포맷을 지정하는 매서드로, 큰 따옴표 안에
		출력하고자 하는 형식을 지정함. 출력 포맷 내에 %로 시작하는 위치는 인지로 값이 넘어오는 위치에 해당함. 출력 타입은
		% 다음에 나오는 문자에 따라 결정됨. 
		
		%d - 뒤에 오는 정수를 앞으로 넘겨 받아 10진수로 표현함.
		%o - 뒤에 오는 정수를 앞으로 넘겨 받아 8진수로 표현함.
		%x - 뒤에 오는 정수를 앞으로 넘겨 받아 16진수로 표현함.
		%s - 뒤에 오는 문자열을 앞으로 인자로 넘겨 받아 출력함.
		%f - 뒤에 오는 실수를 인자로 넘겨 받아 출력함. 이때 실수의 자릿수를 규정할 수 있는데, 이를 정형화하는 방법으로
		     '%전체 자릿수 + . +소수점 자릿수+ f'와 같이 표현함. %3.1f 라면 전체 자릿수는 3자리에, 소수점 자릿수는
		     1자리로 설정한다는 의미. 다만 이때 주어진 값 자체를 변형하여 표기하는 것은 불가능함.
		
		여러개의 % 조합 또한 가능함. ex) System.out.printf("%d와 %4.2f\n", 4, 5.8); 인 경우에는
		%d에 해당하는 4를 받아서 인자로 사용하고, %f에 해당하는 5.8을 받아서 4.2만큼 4자리, 소수점2자리까지 표현함
		
		*/
	}
}
