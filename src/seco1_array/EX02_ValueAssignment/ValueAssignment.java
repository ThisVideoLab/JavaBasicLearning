package seco1_array.EX02_ValueAssignment;

public class ValueAssignment {
	
	public static void main(String[]args) {
		
		/* 5.1.3 1차원 배열을 생성하는 다양한 방법
		   
		   앞선 내용으로 1차원 배열을 생성하고 값을 대입하는 방법을 익힌 것 이외에, 자바에서는 배열을 생성하고 값을 대입하는 다양한 방법을
		   지원함. 앞의 방법을 포함해 1차원 배열을 생성하거나 값을 대입하는 3가지 방법에 대해 학습해보자.
		   
		   방법1) 배열 객체를 생성하고 값 대입하기
		   첫번째 방법은 앞서 알아본 것처럼 배열의 객체를 먼저 선언하고, 이후 각 인덱스 위치마다 값을 대입하는 것. 객체를 생성할 때는 배열의
		   길이가 명확히 기술되어야 하고, 값을 입력할 때는 가용한 인덱스 (0 ~ (배열의 길이 - 1))만을 사용해야 함. 그렇지 않으면 배열의
		   크기보다 더 큰 인덱스라며 exception이 출력됨.
		   
		   배열 객체를 생성하고 값 대입하기
		   
		   자료형[] 참조 변수명 = new 자료형[배열의 길이];
		   참조 변수명[0] = 값;
		   참조 변수명[1] = 값;
		   ...
		   참조 변수명[n-1] = 값;
		 */
		
		int ex1[] = new int [3];
		ex1[0] = 1;
		ex1[1] = 2;
		ex1[2] = 3;
		
		/* 방법2) 배열 객체 생성과 함께 값 대입하기
 		   
 		   두번째 방법은 배열 객체를 생성함과 동시에 값을 대입하는 방법. 이때 초깃값을 직접 넣어 주므로 컴파일러에 따른 강제 초기화 과정은
 		   생략됨. 두번째 방법에서는 객체를 생성할 때 오른쪽 항의 대괄호([])안에 배열의 길이를 지정하지 않는다는 특징이 있음. 그러나 배열의
 		   길이는 다음에 나오는 중괄호({}) 안의 추기화 데이터 개수로 결정되므로 배열의 특징을 모두 만족함.
 		   
 		   배열 객체 생성과 함께 값 대입하기
 		   
 		   자료형[] 참조 변수명 = enw 자료형[]{값, 값, ...., 값}; // 배열 길이 미지정, 배열 길이는 값의 개수로 결정됨 
 		   ex) int ex1[] = new int[]{3, 4, 5};
 		   
		   
		     
		 */
	
		
	}

}
