package sec03_localinnerclass.EX01_AccessMemberAndLocalVariable;

class A{
	int a = 3; // 필드 
	void abc(){
		int b = 5;
		class B{ // 지역 이너 클래스 
			void bcd() {
				System.out.println(a); // 필드 - class A 내의 모든 객체가 사용 가능
				System.out.println(b); // 지역 변수 - 해당 매서드 내에서만 사용 가능
				a = 5;
				// b = 7; // 지역 이너 클래스에서 사용하는 지역 변수는 자동 final 선언
			}
		}
		B bb = new B(); // 지역 이너 클래스의 지역 변수를 사용해야 하므로 바로 객체 생성
		bb.bcd();
	}
}

public class AccessMemberAndLocalVariable {

	public static void main(String[]args) {
		
		/* 13.1.3 지역 이너 클래스
		   
		   지역 이너 클래스는 클래스의 멤버가 아닌 메서드 내에서 정의되는 클래스임. 지역 변수처럼 정의된
		   메서드 내부에서만 사용할 수 있으므로 일반적으로 지역 이너 클래스는 선언 이후 바로 객체를 생성해
		   사용하며, 메서드가 호출될 때만 메모리에 로딩됨. 따라서 지역 이너 클래스는 정적 클래스로 지정할
		   수 없음. 지역 클래스를 컴파일하면 생성되는 클래스명이 조금 독특한데, '아우터 클래스& + 숫자+
		   지역 이너 클래스.class'와 같이 지역 이너 클래스 이름 앞에 숫자가 포함된 이름으로 클래스 파일이
		   생성됨. 숫자가 포함되는 이유는 지역 이너 클래스는 매서드 내에서만 정의하고 사용할 수 있으므로,
		   여러 개의 메서드에서 동일한 이름읲 지역 이너 클래스를 생성할 수도 있기 때문임. 
		   
		   지역 이너 클래스 객체 생성하기
		   
		   지역 이너 클래스도 다른 이너 클래스처럼 아우터 클래스의 멤버를 접근 지정자와 상관없이 사용할 수
		   있으며, 추가로 자신이 정의된 메서드의 지역 변수도 클래스 내부에서 사용할 수 있음. 
		   
		   단, 지역 변수를 사용할 때는 반드시 해당 지역 변수가 final로 선언되어야 하며,(중요)
		   
		   만일 final로 선언되지 않은 지역 변수를 지역 클래스 내부에서 사용할 때는 컴파일러가 강제로 해당
		   지역 변수에 final을 추가해 줌. 지역 이너 클래스의 객체 생성 방법은 일반 클래스의 객체 생성
		   방법과 동일하지만, 클래스가 정의도니 메서드 내부에서만 객체를 생성할 수 있다는 차이점이 있음.
		   
		    지역 이너 클래스의 객체 생성 방법
		    
		    지역 이너 클래스 지역 이너클래스 참조 변수 = new 지역 이너 클래스();
		    
		    class A{
		    	void abc(){
		    		class B{ // 지역 이너 클래스 
		    		}
		    		B b = new B(); // 지역 이너 클래스 객체 생성
		    	}
		    }
		   		   
		 */
		
		// 객체 생성 및 메서드 호출을 통해 지역 이너 클래스의 지역 변수 사용
		
		A a = new A(); // 먼저 class A로 객체를 생성
		a.abc(); 
		
		/* abc() 메서드를 호출하면 해당 메서드 내부에서 다시금 local inner class B를 생성한 뒤에,
		   메서드 안에서 바로 생성된 class B의 객체를 만들고 해당 객체를 통해 지역 이너 클래스의 메서드를
		   호출해서 사용함. abc() 메서드가 종료된 순간 이 호출도 불가능해지기 때문에, class B 성생을
		   완료한 뒤 해당 클래스가 존재하는 메서드가 닫히기 전에 필요한 코드 실행을 해야 함을 예제를 통해서
		   관찰 가능함. 
		  
		 */
		
	}
	
}
